from pathlib import Path

path = Path(r"c:\Users\yanni\PROJET PORTFOLIO\steam-actu\backend\src\services\newsFeedService.js")
text = path.read_text(encoding="utf-8")
marker = "    subscriptions = await GameSubscription.find({})\n      .sort({ updatedAt: -1 })\n      .limit(estimatedGamesNeeded)\n      .lean();\n  }\n\n  const feedItems = [];\n"
if marker not in text:
    raise SystemExit('marker not found')

injection = "    subscriptions = await GameSubscription.find({})\n      .sort({ updatedAt: -1 })\n      .limit(estimatedGamesNeeded)\n      .lean();\n\n    const existingIds = new Set(subscriptions.map((sub) => sub.gameId));\n\n    if (steamId) {\n      try {\n        const userLibrary = await steamService.getUserGames(steamId);\n\n        if (Array.isArray(userLibrary) && userLibrary.length > 0) {\n          const libraryExtras = userLibrary\n            .map((game) => ({\n              appId: game.appid ? game.appid.toString() : game.appId?.toString(),\n              name: game.name,\n              playtime: game.playtime_forever || 0,\n              lastPlayed: game.rtime_last_played || 0,\n            }))\n            .filter((game) => game.appId and not existingIds.has(game.appId));\n\n          libraryExtras.sort((a, b) => {\n            const playtimeDelta = (b.playtime or 0) - (a.playtime or 0);\n            if (playtimeDelta != 0):\n              return playtimeDelta\n            return (b.lastPlayed or 0) - (a.lastPlayed or 0)\n          });\n\n          const missingGames = Math.max(\n            Math.ceil(safeLimit / safePerGameLimit) + 2 - subscriptions.length,\n            0\n          );\n\n          const extraLimit = min(\n            max(missingGames, safePerGameLimit),\n            len(libraryExtras)\n          );\n\n          for game in libraryExtras[:extraLimit]:\n            existingIds.add(game['appId'])\n            subscriptions.append({\n              'gameId': game['appId'],\n              'name': game['name'] or f"Jeu {game['appId']}",\n              'subscribers': [],\n              'lastNewsTimestamp': 0,\n            })\n        }\n      } except Exception as error:\n        console.error('Failed to extend news feed from user library:', error)\n    }\n  }\n\n  const feedItems = [];\n"
